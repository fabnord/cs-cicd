name: Sample Webapp CI

on:
  workflow_dispatch:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

env:
  FALCON_CLIENT_ID: "${{ secrets.FALCON_CLIENT_ID }}"
  FALCON_CLIENT_SECRET: "${{ secrets.FALCON_CLIENT_SECRET }}"
  FALCON_CLOUD_REGION: 'us-1'
  CONTAINER_REPOSITORY: "fabnord.io/webapp"
  CONTAINER_TAG: "${{ github.run_number }}"

jobs:
  build_webapp_image:
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v3

    - name: Use Node.js 18.x
      uses: actions/setup-node@v3
      with:
        node-version: '18.x'
        cache: 'npm'
    - run: npm ci

    - name: Docker Setup Buildx
      uses: docker/setup-buildx-action@v2.1.0

    - name: Build and push Docker images
      uses: docker/build-push-action@v3.2.0
      with:
        file: ./Dockerfile
        load: true
        tags: "${{ env.CONTAINER_REPOSITORY }}:${{ env.CONTAINER_TAG }}"

    - name: Inspect
      run: |
        docker image inspect "${{ env.CONTAINER_REPOSITORY }}:${{ env.CONTAINER_TAG }}"

    - name: CrowdStrike Container Image Scan
      uses: crowdstrike/container-image-scan-action@v0.7
      with:
        crowdstrike_region: "${{ env.FALCON_CLOUD_REGION }}"
        container_repository: "${{ env.CONTAINER_REPOSITORY }}"
        container_tag: "${{ env.CONTAINER_TAG }}"
      env:
        FALCON_CLIENT_ID: "${{ secrets.FALCON_CLIENT_ID }}"
        FALCON_CLIENT_SECRET: "${{ secrets.FALCON_CLIENT_SECRET }}"